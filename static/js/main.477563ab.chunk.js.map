{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","goods","isReversed","sortType","NONE","visibleGoods","this","sort","a","b","LENGTH","length","ALPHABET","localeCompare","reverse","className","type","onClick","setState","event","currentTarget","classList","remove","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,wFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAiCE,IAAME,EAAb,4MACEC,MAAe,CACbC,MAAOH,EACPI,YAAY,EACZC,SAAUN,EAASO,MAJvB,4CAOE,WAAU,IAAD,OACDC,EAAY,YAAOC,KAAKN,MAAMC,OACpC,EAAiCK,KAAKN,MAA9BE,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SAmBpB,OAjBAE,EAAaE,MAAK,SAACC,EAAGC,GACpB,OAAQN,GACN,KAAKN,EAASa,OACZ,OAAOF,EAAEG,OAASF,EAAEE,OAEtB,KAAKd,EAASe,SACZ,OAAOJ,EAAEK,cAAcJ,GAEzB,QACE,OAAO,MAITP,GACFG,EAAaS,UAIb,mCACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBT,KAAKN,MAAMG,WAAaN,EAASe,SAAW,WAAa,IACtFK,QACE,WACE,EAAKC,SAAS,CACZf,SAAUN,EAASe,YAN3B,iCAcA,wBACEI,KAAK,SACLD,UAAS,4BAAuBT,KAAKN,MAAMG,WAAaN,EAASa,OAAS,WAAa,IACvFO,QACE,SAACE,GACC,EAAKD,SAAS,CACZf,SAAUN,EAASa,SAErBS,EAAMC,cAAcC,UAAUC,OAAO,aAR3C,4BAeA,wBACEN,KAAK,SACLD,UAAS,6BAAiD,IAA1BT,KAAKN,MAAME,WAAsB,WAAa,IAC9Ee,QACE,WACE,EAAKC,UAAS,SAAClB,GAAD,MAAY,CACxBE,YAAaF,EAAME,gBAN3B,qBAeGG,EAAa,KAAOC,KAAKN,MAAMC,MAAM,IACpC,wBACEe,KAAK,SACLD,UAAU,4BACVE,QAAS,WACP,EAAKC,UAAS,iBAAO,CACnBf,SAAUN,EAASO,KACnBF,YAAY,OANlB,sBAgBN,6BACE,6BAEIG,EAAakB,KAAI,SAACC,GAAD,OACf,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,mBAjG1C,GAAyBC,IAAMC,WC/C/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.477563ab.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\n// type ReorderOptions = {\n//   sortType: SortType,\n//   isReversed: boolean,\n// };\n\n// Use this function in the render to prepare goods\n// export function getReorderedGoods(\n//   goods: string[],\n//   { sortType, isReversed }: ReorderOptions,\n// ) {\n//   // To avoid the original array mutation\n//   const visibleGoods = [...goods];\n\n//   // Sort and reverse goods if needed\n//   // eslint-disable-next-line no-console\n//   console.log(sortType, isReversed);\n\n//   return visibleGoods;\n// }\n\n// DON'T save goods to the state\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n  goods: string[],\n};\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    goods: goodsFromServer,\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  render() {\n    const visibleGoods = [...this.state.goods];\n    const { isReversed, sortType } = this.state;\n\n    visibleGoods.sort((a, b): SortType => {\n      switch (sortType) {\n        case SortType.LENGTH:\n          return a.length - b.length;\n\n        case SortType.ALPHABET:\n          return a.localeCompare(b);\n\n        default:\n          return 0;\n      }\n    });\n\n    if (isReversed) {\n      visibleGoods.reverse();\n    }\n\n    return (\n      <>\n        <div className=\"section content\">\n          <div className=\"buttons\">\n            <button\n              type=\"button\"\n              className={`button is-info ${this.state.sortType !== SortType.ALPHABET ? 'is-light' : ''}`}\n              onClick={\n                () => {\n                  this.setState({\n                    sortType: SortType.ALPHABET,\n                  });\n                }\n              }\n            >\n              Sort alphabetically\n            </button>\n\n            <button\n              type=\"button\"\n              className={`button is-success ${this.state.sortType !== SortType.LENGTH ? 'is-light' : ''}`}\n              onClick={\n                (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n                  this.setState({\n                    sortType: SortType.LENGTH,\n                  });\n                  event.currentTarget.classList.remove('is-light');\n                }\n              }\n            >\n              Sort by length\n            </button>\n\n            <button\n              type=\"button\"\n              className={`button is-warning ${this.state.isReversed !== true ? 'is-light' : ''}`}\n              onClick={\n                () => {\n                  this.setState((state) => ({\n                    isReversed: !state.isReversed,\n                  }));\n                }\n              }\n            >\n              Reverse\n            </button>\n\n            {\n              (visibleGoods[0] !== this.state.goods[0]) && (\n                <button\n                  type=\"button\"\n                  className=\"button is-danger is-light\"\n                  onClick={() => {\n                    this.setState(() => ({\n                      sortType: SortType.NONE,\n                      isReversed: false,\n                    }));\n                  }}\n                >\n                  Reset\n                </button>\n              )\n            }\n          </div>\n\n          <ul>\n            <ul>\n              {\n                visibleGoods.map((good) => (\n                  <li data-cy=\"Good\" key={good}>\n                    {good}\n                  </li>\n                ))\n              }\n            </ul>\n          </ul>\n        </div>\n      </>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}