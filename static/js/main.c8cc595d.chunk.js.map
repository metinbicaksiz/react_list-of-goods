{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","goods","isReversed","sortType","None","visibleGoods","this","sort","a","b","Length","length","Alphabet","localeCompare","reverse","className","type","classnames","onClick","setState","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAYE,IAAME,EAAb,4MACEC,MAAe,CACbC,MAAOH,EACPI,YAAY,EACZC,SAAUN,EAASO,MAJvB,4CAOE,WAAU,IAAD,OACDC,EAAY,YAAOC,KAAKN,MAAMC,OACpC,EAAiCK,KAAKN,MAA9BE,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SAEpBE,EAAaE,MAAK,SAACC,EAAGC,GACpB,OAAQN,GACN,KAAKN,EAASa,OACZ,OAAOF,EAAEG,OAASF,EAAEE,OAEtB,KAAKd,EAASe,SACZ,OAAOJ,EAAEK,cAAcJ,GAEzB,QACE,OAAO,MAITP,GACFG,EAAaS,UA4Bf,OACE,mCACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,SAAU,UAC9BX,KAAKN,MAAMG,WAAaN,EAASe,UAAY,YAC/CM,QAjCuB,WAC/B,EAAKC,SAAS,CACZhB,SAAUN,EAASe,YA2Bf,iCASA,wBACEI,KAAK,SACLD,UAAWE,IAAW,SAAU,aAC9BX,KAAKN,MAAMG,WAAaN,EAASa,QAAU,YAC7CQ,QApCiB,WACzB,EAAKC,SAAS,CACZhB,SAAUN,EAASa,UA8Bf,4BASA,wBACEM,KAAK,SACLD,UAAWE,IAAW,SAAU,cAC7BX,KAAKN,MAAME,YAAc,YAC5BgB,QAvCY,WACpB,EAAKC,UAAS,SAACnB,GAAD,MAAY,CACxBE,YAAaF,EAAME,gBAiCf,sBAUGI,KAAKN,MAAMG,WAAaN,EAASO,MAC7BE,KAAKN,MAAME,aACd,wBACEc,KAAK,SACLD,UAAU,4BACVG,QA5CO,WACnB,EAAKC,UAAS,iBAAO,CACnBhB,SAAUN,EAASO,KACnBF,YAAY,OAsCJ,sBAWN,6BAEIG,EAAae,KAAI,SAACC,GAAD,OACf,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,iBArGxC,GAAyBC,IAAMC,WC3B/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c8cc595d.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classnames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  None,\n  Alphabet,\n  Length,\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n  goods: string[],\n};\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    goods: goodsFromServer,\n    isReversed: false,\n    sortType: SortType.None,\n  };\n\n  render() {\n    const visibleGoods = [...this.state.goods];\n    const { isReversed, sortType } = this.state;\n\n    visibleGoods.sort((a, b): SortType => {\n      switch (sortType) {\n        case SortType.Length:\n          return a.length - b.length;\n\n        case SortType.Alphabet:\n          return a.localeCompare(b);\n\n        default:\n          return 0;\n      }\n    });\n\n    if (isReversed) {\n      visibleGoods.reverse();\n    }\n\n    const handleSortAlphabetically = () => {\n      this.setState({\n        sortType: SortType.Alphabet,\n      });\n    };\n\n    const handleSortByLength = () => {\n      this.setState({\n        sortType: SortType.Length,\n      });\n    };\n\n    const handleReverse = () => {\n      this.setState((state) => ({\n        isReversed: !state.isReversed,\n      }));\n    };\n\n    const handleSReset = () => {\n      this.setState(() => ({\n        sortType: SortType.None,\n        isReversed: false,\n      }));\n    };\n\n    return (\n      <>\n        <div className=\"section content\">\n          <div className=\"buttons\">\n            <button\n              type=\"button\"\n              className={classnames('button', 'is-info',\n                this.state.sortType !== SortType.Alphabet && 'is-light')}\n              onClick={handleSortAlphabetically}\n            >\n              Sort alphabetically\n            </button>\n\n            <button\n              type=\"button\"\n              className={classnames('button', 'is-success',\n                this.state.sortType !== SortType.Length && 'is-light')}\n              onClick={handleSortByLength}\n            >\n              Sort by length\n            </button>\n\n            <button\n              type=\"button\"\n              className={classnames('button', 'is-warning',\n                !this.state.isReversed && 'is-light')}\n              onClick={handleReverse}\n            >\n              Reverse\n            </button>\n\n            {\n              (this.state.sortType !== SortType.None\n                || this.state.isReversed) && (\n                <button\n                  type=\"button\"\n                  className=\"button is-danger is-light\"\n                  onClick={handleSReset}\n                >\n                  Reset\n                </button>\n              )\n            }\n          </div>\n\n          <ul>\n            {\n              visibleGoods.map((good) => (\n                <li data-cy=\"Good\" key={good}>\n                  {good}\n                </li>\n              ))\n            }\n          </ul>\n        </div>\n      </>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}